---
import { IconDetails } from "@components/atoms/Icon/IconDetails";
import type { FeaturePropsType } from "@components/mod";
import { Image } from "astro:assets";

type Props = FeaturePropsType;

const {
	title,
	subtitle,
	description,
	details,
	link,
	image: { src, alt },
} = Astro.props;
---

<div class="overflow-hidden bg-white py-24 sm:py-32">
	<div class="mx-auto max-w-7xl px-6 lg:px-8">
		<div
			class="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 sm:gap-y-20 lg:mx-0 lg:max-w-none lg:grid-cols-2"
		>
			<div class="lg:pt-4 lg:pr-8">
				<div class="lg:max-w-lg">
					<h2 class="text-base/7 font-semibold text-indigo-600">
						{title}
					</h2>
					<p
						class="mt-2 text-4xl font-semibold tracking-tight text-pretty text-gray-900 sm:text-5xl"
					>
						{subtitle}
					</p>
					<p
						class="mt-6 text-lg/8 text-gray-700"
						set:html={description}
					/>
					<dl
						class="mt-10 max-w-xl space-y-8 text-base/7 text-gray-600 lg:max-w-none"
					>
						{
							details.map(({ detailsTitle, detailsDesc, detailsIcone }) => (
								<div class="relative pl-9">
									<dt class="inline font-semibold text-gray-900">
										<IconDetails name={detailsIcone} />
										{detailsTitle}
									</dt>
									<dd class="inline">{detailsDesc}</dd>
								</div>
							))
						}
					</dl>
					{
						link ? (
							<a
								href={link.href}
								class="mt-10 block w-max rounded-3xl bg-primary px-6 py-2.5 text-sm font-semibold text-white shadow-xs hover:bg-primary-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
							>
								{link.textContent}
							</a>
						) : null
					}
				</div>
			</div>
			<Image
				width="2432"
				height="1442"
				src={src}
				alt={alt}
				class="w-3xl max-w-none rounded-xl shadow-xl ring-1 ring-gray-400/10 sm:w-228 md:-ml-4 lg:-ml-0"
			/>
		</div>
	</div>
</div>
